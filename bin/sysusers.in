#!/bin/sh
# Copyright (c) 2018 Chris Cromer
# Released under the 2-clause BSD license.
#
# This is an implementation of the systemd-sysusers command

sysusersver=@VERSION@

usage() {
	printf '%s\n' \
		'@BINNAME@' '' \
		'@BINNAME@ creates system users and groups, based on the file' \
		'format and location specified in sysusers.d(5).' '' \
		'Usage: /usr/bin/@BINNAME@ [OPTIONS...] [CONFIGFILE...]' '' \
		'Options:' \
		'  --root=root               All paths will be prefixed with the' \
		'                            given alternate root path, including' \
		'                            config search paths.' \
		"  --replace=PATH            Don't run check in the package" \
		'  --inline                  Treat each positional argument as a' \
		'                            separate configuration line instead of a' \
		'                            file name.' \
		'  -h, --help                Print a short help text and exit.' \
		'  --version                 Print a short version string and exit.'
	exit "$1"
}

replace=''
inline=0
root=''
replace=''

while :; do
	case "$1" in
		-h|--help) usage 0 ;;
		--root=*) root="${1#--root=}" ;;
		--root)
			root="$2"
			shift
			;;
		--replace=*) replace="${1#--replace=}" ;;
		--replace)
			replace="$2"
			shift
			;;
		--inline) inline=1 ;;
		--version)
			printf '%s\n' "${sysusersver}"
			exit 0
			;;
		--) shift; break ;;
		-*) usage 1 ;;
		*) break ;;
	esac
	shift
done

# shellcheck source=lib/common.sh
. @LIBDIR@/opensysusers/common.sh

if [ "$#" -eq 0 ]; then
	get_conf_files
	get_conf_paths

	IFS=':'
	for file in ${sysusers_d}; do
		IFS="${_IFS}"
		parse_file "${file}"
	done
	exit "${error}"
fi

if [ "${inline}" -eq 0 ]; then
	for file in "$@"; do
		[ "${file}" = '--' ] && continue
		IFS=':'
		for dir in ${sysusers_dirs}; do
			if [ -f "${dir}/${file}" ]; then
				parse_file "${dir}/${file}"
				break
			fi
		done
		IFS="${_IFS}"
	done
	if [ -n "${replace}" ]; then
		get_conf_files
		get_conf_paths

		IFS=':'
		for file in ${sysusers_d}; do
			parse_file "${file}"
		done
		IFS="${_IFS}"
	fi
	exit "${error}"
else
	for string in "$@"; do
		parse_string "${string}"
	done
	if [ -n "${replace}" ]; then
		get_conf_files
		get_conf_paths

		IFS=':'
		for file in ${sysusers_d}; do
			parse_file "${file}"
		done
		IFS="${_IFS}"
	fi
	exit "${error}"
fi

exit "${error}"
